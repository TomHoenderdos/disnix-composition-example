<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="chap-architecture">

	<title>Architecture</title>
	
	<para>
		We have several architecture variants in this example. What all variants have in common
		is that they have a <code>HelloService</code>, a web service returning the string: 'Hello',
		a <code>HelloWorldService</code> web service, which attaches the string ' world!' to 'Hello' and
		a web application front-end displaying the result.
	</para>
	
	<figure xml:id="fig-1-architecture-simple">
		<title>Architecture of the HelloWorld example using a simple composition</title>		
		<mediaobject>
			<imageobject>
				<imagedata fileref="architecture-simple.png" format="PNG"/>
			</imageobject>
		</mediaobject>
	</figure>
	
	<para>
		<xref linkend="fig-1-architecture-simple" /> shows the architecture of the simplest
		variant of this example. In this architecture a <code>HelloService</code> component
		is shown which returns the string 'Hello'. The <code>HelloWorldService</code>
		retrieves the 'Hello' string to generate the sentence: 'Hello World!'. The
		<code>HelloWorld</code> web application displays the result.
	</para>
	
	<figure xml:id="fig-2-architecture-composition">
		<title>Architecture of the HelloWorld example using an alternative composition</title>		
		<mediaobject>
			<imageobject>
				<imagedata fileref="architecture-composition.png" format="PNG"/>
			</imageobject>
		</mediaobject>
	</figure>
	
	<para>
		<xref linkend="fig-2-architecture-composition" /> shows an architecture using an
		alternative composition. In this variant, a web service called <code>HelloDBService</code>
		is used retrieving the Hello string from a MySQL database instead of the ordinary
		<code>HelloService</code>.
	</para>
	
	<figure xml:id="fig-3-architecture-lookup">
		<title>Architecture of the HelloWorld example using a lookup service</title>		
		<mediaobject>
			<imageobject>
				<imagedata fileref="architecture-lookup.png" format="PNG"/>
			</imageobject>
		</mediaobject>
	</figure>
	
	<para>
		The variant shown in <xref linkend="fig-3-architecture-lookup" /> dynamically binds
		service together using a Lookup service which knows about the locations of all services.
		The architecture uses different variants of the web application front end and the
		<code>HelloWorldService</code> which are lookup service aware. By using a lookup service
		no rebuilds are required of all the other services (except when the location of the lookup
		service changes).
	</para>
	
	<figure xml:id="fig-4-architecture-loadbalancing">
		<title>Architecture of the HelloWorld example using a lookup service</title>		
		<mediaobject>
			<imageobject>
				<imagedata fileref="architecture-loadbalancing.png" format="PNG"/>
			</imageobject>
		</mediaobject>
	</figure>
	
	<para>
		The last variant shown in <xref linkend="fig-4-architecture-loadbalancing" /> uses a
		load balancer using the round-robin scheduling method to forward request to multiple
		instances of the same service, to achieve a simple form of load balancing.
	</para>
</chapter>
